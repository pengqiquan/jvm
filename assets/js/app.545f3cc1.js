"use strict";(self.webpackChunkjvm=self.webpackChunkjvm||[]).push([[143],{3131:(e,l,t)=>{t.d(l,{g:()=>c});var i=t(2009),d=t(6971),s=t(1598),n=t(1843);const c=[i.Z,d.Z,s.Z,n.Z]},9947:(e,l,t)=>{t.d(l,{p:()=>i});const i=[t(3051).Z]},4611:(e,l,t)=>{t.d(l,{l:()=>n});var i=t(8866),d=t(1263),s=t(6243);const n=[i.Z,d.Z,s.Z]},4150:(e,l,t)=>{t.d(l,{Z:()=>d});var i=t(6252);const d={404:(0,i.RC)((()=>t.e(491).then(t.bind(t,8491)))),Layout:(0,i.RC)((()=>t.e(293).then(t.bind(t,3293))))}},6056:(e,l,t)=>{t.d(l,{b:()=>d});var i=t(6252);const d={"v-67344f60":(0,i.RC)((()=>t.e(295).then(t.bind(t,2948)))),"v-439ee413":(0,i.RC)((()=>t.e(185).then(t.bind(t,1006)))),"v-c0c7a484":(0,i.RC)((()=>t.e(321).then(t.bind(t,142)))),"v-315c8935":(0,i.RC)((()=>t.e(44).then(t.bind(t,5706)))),"v-1ee5b522":(0,i.RC)((()=>t.e(220).then(t.bind(t,3668)))),"v-6359038d":(0,i.RC)((()=>t.e(366).then(t.bind(t,7602)))),"v-7077dc26":(0,i.RC)((()=>t.e(255).then(t.bind(t,471)))),"v-7273adb0":(0,i.RC)((()=>t.e(842).then(t.bind(t,3084)))),"v-13ff1e88":(0,i.RC)((()=>t.e(477).then(t.bind(t,1612)))),"v-70d5883b":(0,i.RC)((()=>t.e(739).then(t.bind(t,1123)))),"v-4bf9441c":(0,i.RC)((()=>t.e(737).then(t.bind(t,5088)))),"v-8daa1a0e":(0,i.RC)((()=>t.e(509).then(t.bind(t,1829)))),"v-f4ee9328":(0,i.RC)((()=>t.e(428).then(t.bind(t,5731)))),"v-3706649a":(0,i.RC)((()=>t.e(88).then(t.bind(t,8109))))}},9706:(e,l,t)=>{t.d(l,{T:()=>i});const i={"v-67344f60":()=>t.e(295).then(t.bind(t,5993)).then((({data:e})=>e)),"v-439ee413":()=>t.e(185).then(t.bind(t,803)).then((({data:e})=>e)),"v-c0c7a484":()=>t.e(321).then(t.bind(t,7967)).then((({data:e})=>e)),"v-315c8935":()=>t.e(44).then(t.bind(t,2293)).then((({data:e})=>e)),"v-1ee5b522":()=>t.e(220).then(t.bind(t,4253)).then((({data:e})=>e)),"v-6359038d":()=>t.e(366).then(t.bind(t,490)).then((({data:e})=>e)),"v-7077dc26":()=>t.e(255).then(t.bind(t,5177)).then((({data:e})=>e)),"v-7273adb0":()=>t.e(842).then(t.bind(t,2170)).then((({data:e})=>e)),"v-13ff1e88":()=>t.e(477).then(t.bind(t,6719)).then((({data:e})=>e)),"v-70d5883b":()=>t.e(739).then(t.bind(t,9491)).then((({data:e})=>e)),"v-4bf9441c":()=>t.e(737).then(t.bind(t,4512)).then((({data:e})=>e)),"v-8daa1a0e":()=>t.e(509).then(t.bind(t,6464)).then((({data:e})=>e)),"v-f4ee9328":()=>t.e(428).then(t.bind(t,9603)).then((({data:e})=>e)),"v-3706649a":()=>t.e(88).then(t.bind(t,1801)).then((({data:e})=>e))}},4634:(e,l,t)=>{t.d(l,{g:()=>d});var i=t(4802);const d=[["v-67344f60","/00-quickstart.html","开始学习",["/00-quickstart","/00-quickstart.md"]],["v-439ee413","/01-jvm-memory-structure.html","JVM 内存结构",["/01-jvm-memory-structure","/01-jvm-memory-structure.md"]],["v-c0c7a484","/02-hotspot-jvm-object.html","HotSpot 虚拟机对象探秘",["/02-hotspot-jvm-object","/02-hotspot-jvm-object.md"]],["v-315c8935","/03-gc-algorithms.html","垃圾收集策略与算法",["/03-gc-algorithms","/03-gc-algorithms.md"]],["v-1ee5b522","/04-hotspot-gc.html","HotSpot 垃圾收集器",["/04-hotspot-gc","/04-hotspot-gc.md"]],["v-6359038d","/05-memory-allocation-gc.html","内存分配与回收策略",["/05-memory-allocation-gc","/05-memory-allocation-gc.md"]],["v-7077dc26","/06-jvm-performance-tuning.html","JVM 性能调优",["/06-jvm-performance-tuning","/06-jvm-performance-tuning.md"]],["v-7273adb0","/07-class-structure.html","类文件结构",["/07-class-structure","/07-class-structure.md"]],["v-13ff1e88","/08-load-class-time.html","类加载的时机",["/08-load-class-time","/08-load-class-time.md"]],["v-70d5883b","/09-load-class-process.html","类加载的过程",["/09-load-class-process","/09-load-class-process.md"]],["v-4bf9441c","/10-class-loader.html","类加载器",["/10-class-loader","/10-class-loader.md"]],["v-8daa1a0e","/","首页",["/index.html","/README.md"]],["v-f4ee9328","/summary.html","",["/summary","/summary.md"]],["v-3706649a","/404.html","",["/404"]]].reduce(((e,[l,t,d,s])=>(e.push({name:l,path:t,component:i.Y,meta:{title:d}},...s.map((e=>({path:e,redirect:t})))),e)),[{name:"404",path:"/:catchAll(.*)",component:i.Y}])},5472:(e,l,t)=>{t.d(l,{D:()=>i});const i=[{title:"开始学习",headers:[{level:2,title:"清单",slug:"清单",children:[]},{level:2,title:"站点",slug:"站点",children:[]},{level:2,title:"写作规范",slug:"写作规范",children:[]},{level:2,title:"License",slug:"license",children:[]},{level:2,title:"Doocs 社区优质项目",slug:"doocs-社区优质项目",children:[]},{level:2,title:"贡献者",slug:"贡献者",children:[]},{level:2,title:"公众号",slug:"公众号",children:[]}],path:"/00-quickstart.html",pathLocale:"/",extraFields:[]},{title:"JVM 内存结构",headers:[{level:2,title:"程序计数器（PC 寄存器）",slug:"程序计数器-pc-寄存器",children:[{level:3,title:"程序计数器的定义",slug:"程序计数器的定义",children:[]},{level:3,title:"程序计数器的作用",slug:"程序计数器的作用",children:[]},{level:3,title:"程序计数器的特点",slug:"程序计数器的特点",children:[]}]},{level:2,title:"Java 虚拟机栈（Java 栈）",slug:"java-虚拟机栈-java-栈",children:[{level:3,title:"Java 虚拟机栈的定义",slug:"java-虚拟机栈的定义",children:[]},{level:3,title:"压栈出栈过程",slug:"压栈出栈过程",children:[]},{level:3,title:"局部变量表",slug:"局部变量表",children:[]},{level:3,title:"操作数栈",slug:"操作数栈",children:[]},{level:3,title:"方法的调用",slug:"方法的调用",children:[]},{level:3,title:"Java 虚拟机栈的特点",slug:"java-虚拟机栈的特点",children:[]}]},{level:2,title:"本地方法栈（C 栈）",slug:"本地方法栈-c-栈",children:[{level:3,title:"本地方法栈的定义",slug:"本地方法栈的定义",children:[]},{level:3,title:"栈帧变化过程",slug:"栈帧变化过程",children:[]}]},{level:2,title:"堆",slug:"堆",children:[{level:3,title:"堆的定义",slug:"堆的定义",children:[]},{level:3,title:"堆的特点",slug:"堆的特点",children:[]},{level:3,title:"新生代与老年代",slug:"新生代与老年代",children:[]},{level:3,title:"对象分配过程",slug:"对象分配过程",children:[]},{level:3,title:"Full GC /Major GC 触发条件",slug:"full-gc-major-gc-触发条件",children:[]},{level:3,title:"逃逸分析",slug:"逃逸分析",children:[]},{level:3,title:"TLAB",slug:"tlab",children:[]},{level:3,title:"四种引用方式",slug:"四种引用方式",children:[]}]},{level:2,title:"方法区",slug:"方法区",children:[{level:3,title:"方法区的定义",slug:"方法区的定义",children:[]},{level:3,title:"方法区的特点",slug:"方法区的特点",children:[]},{level:3,title:"运行时常量池",slug:"运行时常量池",children:[]}]},{level:2,title:"直接内存（堆外内存）",slug:"直接内存-堆外内存",children:[{level:3,title:"操作直接内存",slug:"操作直接内存",children:[]},{level:3,title:"直接内存与堆内存比较",slug:"直接内存与堆内存比较",children:[]}]}],path:"/01-jvm-memory-structure.html",pathLocale:"/",extraFields:[]},{title:"HotSpot 虚拟机对象探秘",headers:[{level:2,title:"对象的内存布局",slug:"对象的内存布局",children:[{level:3,title:"对象头",slug:"对象头",children:[]},{level:3,title:"实例数据",slug:"实例数据",children:[]},{level:3,title:"对齐填充",slug:"对齐填充",children:[]}]},{level:2,title:"对象的创建过程",slug:"对象的创建过程",children:[{level:3,title:"类加载检查",slug:"类加载检查",children:[]},{level:3,title:"为新生对象分配内存",slug:"为新生对象分配内存",children:[]},{level:3,title:"初始化",slug:"初始化",children:[]}]},{level:2,title:"对象的访问方式",slug:"对象的访问方式",children:[{level:3,title:"句柄访问方式",slug:"句柄访问方式",children:[]},{level:3,title:"直接指针访问方式",slug:"直接指针访问方式",children:[]}]}],path:"/02-hotspot-jvm-object.html",pathLocale:"/",extraFields:[]},{title:"垃圾收集策略与算法",headers:[{level:2,title:"判定对象是否存活",slug:"判定对象是否存活",children:[{level:3,title:"引用计数法",slug:"引用计数法",children:[]},{level:3,title:"可达性分析法",slug:"可达性分析法",children:[]}]},{level:2,title:"引用的种类",slug:"引用的种类",children:[{level:3,title:"强引用（Strong Reference）",slug:"强引用-strong-reference",children:[]},{level:3,title:"软引用（Soft Reference）",slug:"软引用-soft-reference",children:[]},{level:3,title:"弱引用（Weak Reference）",slug:"弱引用-weak-reference",children:[]},{level:3,title:"虚引用（Phantom Reference）",slug:"虚引用-phantom-reference",children:[]}]},{level:2,title:"回收堆中无效对象",slug:"回收堆中无效对象",children:[{level:3,title:"判定 finalize() 是否有必要执行",slug:"判定-finalize-是否有必要执行",children:[]},{level:3,title:"对象重生或死亡",slug:"对象重生或死亡",children:[]}]},{level:2,title:"回收方法区内存",slug:"回收方法区内存",children:[{level:3,title:"判定废弃常量",slug:"判定废弃常量",children:[]},{level:3,title:"判定无用的类",slug:"判定无用的类",children:[]}]},{level:2,title:"垃圾收集算法",slug:"垃圾收集算法",children:[{level:3,title:"标记-清除算法",slug:"标记-清除算法",children:[]},{level:3,title:"复制算法（新生代）",slug:"复制算法-新生代",children:[]},{level:3,title:"标记-整理算法（老年代）",slug:"标记-整理算法-老年代",children:[]},{level:3,title:"分代收集算法",slug:"分代收集算法",children:[]}]}],path:"/03-gc-algorithms.html",pathLocale:"/",extraFields:[]},{title:"HotSpot 垃圾收集器",headers:[{level:2,title:"新生代垃圾收集器",slug:"新生代垃圾收集器",children:[{level:3,title:"Serial 垃圾收集器（单线程）",slug:"serial-垃圾收集器-单线程",children:[]},{level:3,title:"ParNew 垃圾收集器（多线程）",slug:"parnew-垃圾收集器-多线程",children:[]},{level:3,title:"Parallel Scavenge 垃圾收集器（多线程）",slug:"parallel-scavenge-垃圾收集器-多线程",children:[]}]},{level:2,title:"老年代垃圾收集器",slug:"老年代垃圾收集器",children:[{level:3,title:"Serial Old 垃圾收集器（单线程）",slug:"serial-old-垃圾收集器-单线程",children:[]},{level:3,title:"Parallel Old 垃圾收集器（多线程）",slug:"parallel-old-垃圾收集器-多线程",children:[]},{level:3,title:"CMS 垃圾收集器",slug:"cms-垃圾收集器",children:[]}]},{level:2,title:"G1 通用垃圾收集器",slug:"g1-通用垃圾收集器",children:[]}],path:"/04-hotspot-gc.html",pathLocale:"/",extraFields:[]},{title:"内存分配与回收策略",headers:[{level:2,title:"对象优先在 Eden 分配",slug:"对象优先在-eden-分配",children:[]},{level:2,title:"大对象直接进入老年代",slug:"大对象直接进入老年代",children:[]},{level:2,title:"长期存活的对象将进入老年代",slug:"长期存活的对象将进入老年代",children:[]},{level:2,title:"动态对象年龄判定",slug:"动态对象年龄判定",children:[]},{level:2,title:"空间分配担保",slug:"空间分配担保",children:[]}],path:"/05-memory-allocation-gc.html",pathLocale:"/",extraFields:[]},{title:"JVM 性能调优",headers:[{level:2,title:"使用 64 位 JDK 管理大内存",slug:"使用-64-位-jdk-管理大内存",children:[]},{level:2,title:"使用 32 位 JVM 建立逻辑集群",slug:"使用-32-位-jvm-建立逻辑集群",children:[]},{level:2,title:"调优案例分析与实战",slug:"调优案例分析与实战",children:[{level:3,title:"场景描述",slug:"场景描述",children:[]},{level:3,title:"分析",slug:"分析",children:[]},{level:3,title:"直接内存的回收过程",slug:"直接内存的回收过程",children:[]}]}],path:"/06-jvm-performance-tuning.html",pathLocale:"/",extraFields:[]},{title:"类文件结构",headers:[{level:2,title:"JVM 的“无关性”",slug:"jvm-的-无关性",children:[]},{level:2,title:"Class 文件结构",slug:"class-文件结构",children:[{level:3,title:"魔数",slug:"魔数",children:[]},{level:3,title:"版本信息",slug:"版本信息",children:[]},{level:3,title:"常量池",slug:"常量池",children:[]},{level:3,title:"访问标志",slug:"访问标志",children:[]},{level:3,title:"类索引、父类索引、接口索引集合",slug:"类索引、父类索引、接口索引集合",children:[]},{level:3,title:"字段表集合",slug:"字段表集合",children:[]},{level:3,title:"方法表集合",slug:"方法表集合",children:[]},{level:3,title:"属性表集合",slug:"属性表集合",children:[]}]}],path:"/07-class-structure.html",pathLocale:"/",extraFields:[]},{title:"类加载的时机",headers:[{level:2,title:"类的生命周期",slug:"类的生命周期",children:[]},{level:2,title:"类加载过程中“初始化”开始的时机",slug:"类加载过程中-初始化-开始的时机",children:[]},{level:2,title:"被动引用演示 Demo",slug:"被动引用演示-demo",children:[{level:3,title:"Demo1",slug:"demo1",children:[]},{level:3,title:"Demo2",slug:"demo2",children:[]},{level:3,title:"Demo3",slug:"demo3",children:[]}]},{level:2,title:"接口的加载过程",slug:"接口的加载过程",children:[]}],path:"/08-load-class-time.html",pathLocale:"/",extraFields:[]},{title:"类加载的过程",headers:[{level:2,title:"加载",slug:"加载",children:[{level:3,title:"加载的过程",slug:"加载的过程",children:[]},{level:3,title:"获取二进制字节流",slug:"获取二进制字节流",children:[]},{level:3,title:"“非数组类”与“数组类”加载比较",slug:"非数组类-与-数组类-加载比较",children:[]},{level:3,title:"注意事项",slug:"注意事项",children:[]}]},{level:2,title:"验证",slug:"验证",children:[{level:3,title:"验证的重要性",slug:"验证的重要性",children:[]},{level:3,title:"验证的过程",slug:"验证的过程",children:[]}]},{level:2,title:"准备",slug:"准备",children:[]},{level:2,title:"解析",slug:"解析",children:[]},{level:2,title:"初始化",slug:"初始化",children:[]}],path:"/09-load-class-process.html",pathLocale:"/",extraFields:[]},{title:"类加载器",headers:[{level:2,title:"类与类加载器",slug:"类与类加载器",children:[{level:3,title:"判断类是否“相等”",slug:"判断类是否-相等",children:[]},{level:3,title:"加载器种类",slug:"加载器种类",children:[]}]},{level:2,title:"双亲委派模型",slug:"双亲委派模型",children:[{level:3,title:"什么是双亲委派模型",slug:"什么是双亲委派模型",children:[]},{level:3,title:"工作过程",slug:"工作过程",children:[]},{level:3,title:"为什么使用双亲委派模型",slug:"为什么使用双亲委派模型",children:[]}]}],path:"/10-class-loader.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/summary.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]}]},5220:(e,l,t)=>{t.d(l,{H:()=>i});const i={base:"/jvm/",lang:"zh-CN",title:"JVM 底层原理最全知识总结",description:"Doocs开源社区",head:[["link",{rel:"icon",href:"https://avatars.githubusercontent.com/u/43716716?s=200&v=4"}]],locales:{}}},2232:(e,l,t)=>{t.d(l,{f:()=>i});const i={repo:"doocs/jvm",logo:"https://avatars.githubusercontent.com/u/43716716?s=200&v=4",open:!0,contributorsText:"贡献者",docsDir:"docs",editLinkText:"编辑",lastUpdatedText:"最近更新时间",locales:{"/":{tip:"说明",warning:"注意",danger:"警告",selectLanguageName:"English"}},sidebar:[{text:"指南",children:["/00-quickstart.md","/01-jvm-memory-structure.md","/02-hotspot-jvm-object.md","/03-gc-algorithms.md","/04-hotspot-gc.md","/05-memory-allocation-gc.md","/06-jvm-performance-tuning.md","/07-class-structure.md","/08-load-class-time.md","/09-load-class-process.md","/10-class-loader.md"]}],navbar:[],darkMode:!0,selectLanguageText:"Languages",selectLanguageAriaLabel:"Select language",sidebarDepth:2,editLink:!0,lastUpdated:!0,contributors:!0,notFound:["There's nothing here.","How did we get here?","That's a Four-Oh-Four.","Looks like we've got some broken links."],backToHome:"Take me home",openInNewWindow:"open in new window",toggleDarkMode:"toggle dark mode",toggleSidebar:"toggle sidebar"}}},e=>{e.O(0,[512,567],(()=>(5698,e(e.s=5698)))),e.O()}]);